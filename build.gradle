plugins {
    id "java"
    id 'maven'
    id 'maven-publish'
    id 'checkstyle'
    id 'findbugs'
    id "info.solidsoft.pitest" version "1.1.4"
}

group 'evgenn'
version '1.0-SNAPSHOT'

checkstyle {
    ignoreFailures = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    //link to a local folders
    flatDir {
        dirs 'lib'
    }
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-csv
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'

    compile name: 'sqljdbc42'

    //for barcode example
    compile name: 'comp102x_lib v2.1x'
    compile name: 'core-2.3-SNAPSHOT'
    compile name: 'tess4j'
    compile name: 'javase-2.3-SNAPSHOT'

    //for open_cv
    compile name: 'opencv-2413'

    compile name: 'algs4'
    // https://mvnrepository.com/artifact/com.google.code.findbugs/findbugs
    compile group: 'com.google.code.findbugs', name: 'findbugs', version: '3.0.1'


    compile name: 'courserajava'
    //https://github.com/google/guava
    compile group: 'com.google.guava', name: 'guava', version: '19.0'

    //https://github.com/ReactiveX/RxJava/wiki/Getting-Started
    compile group: 'io.reactivex', name: 'rxjava', version: '+'

    // https://mvnrepository.com/artifact/commons-net/commons-net
    compile group: 'commons-net', name: 'commons-net', version: '+'

    testCompile group: 'junit', name: 'junit', version: '4.11'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile group: 'org.mockito', name: 'mockito-core', version: '+'
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testCompile group: 'org.mockito', name: 'mockito-all', version: '+'

}

// creating javadoc task for test code
task testJavadoc(type: Javadoc) {
    source = sourceSets.test.allJava
    classpath = sourceSets.test.compileClasspath
    // if not changed the destinationDir, the javadoc for production code is overridden.
    destinationDir = file("${buildDir}/docs/testjavadoc")
}

//publish sources jar to a maven local
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenLocal()
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar {
                    classifier "sources"
                }
            }
        }
    }
}
